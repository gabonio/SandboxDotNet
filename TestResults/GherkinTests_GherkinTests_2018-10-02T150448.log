2018-10-02T15:04:48.2635988+02:00;VSTestExecutionThread;Info;SpecFlow+Runner 1.8.2 execution started
2018-10-02T15:04:48.2725948+02:00;VSTestExecutionThread;Info;TestAdapter Location: C:\Users\gcruz\source\repos\SandBox\packages\SpecRun.Runner.1.8.2\tools\TechTalk.SpecRun.VisualStudio.TestAdapter.dll
2018-10-02T15:04:48.6303938+02:00;VSTestExecutionThread;Info;SpecRun Evaluation Mode: Please purchase at http://www.specflow.org/plus to remove test execution delay.
2018-10-02T15:04:48.6313925+02:00;VSTestExecutionThread;Info;SpecRun: running tests in C:\Users\gcruz\source\repos\SandBox\GherkinTests\bin\Debug\GherkinTests.dll
2018-10-02T15:04:48.6313925+02:00;VSTestExecutionThread;Info;Profile: GherkinTests
2018-10-02T15:04:58.8218173+02:00;Thread#14;Info;Discovering target: Default
2018-10-02T15:04:58.8228192+02:00;Thread#14;Info;Discovering tests from assembly: C:\Users\gcruz\source\repos\SandBox\GherkinTests\bin\Debug\GherkinTests.dll
Appdomain Disposed
Test Suite Dump
#0: GherkinTests/GherkinTests - 
#1: Default - 
#2: GherkinTests - 
#3: Calculator - 
#5: Add three numbers - TestAssembly:GherkinTests/Feature:Calculator/Scenario:Add+three+numbers
End: Test Suite Dump
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #5 from normal test queue 
Thread#0:Scheduler: considering testitem #5 for thread 0
Thread#0:TestItem#5:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#5:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#5:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #5 for thread 0
Thread#0:Scheduler: Test #5 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread #0: creating new test thread executor for GherkinTests, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null (target: Default)
Thread#0: Test #5/0 is started on thread #0
Thread#0:T:-> Using app.config
Thread#0:B:Given I enter 50 into the calculator
Thread#0:T:done: CalculatorSteps.GivenIHaveEnteredIntoTheCalculator(50) (0,0s)
Thread#0:B:And I press add
Thread#0:T:done: CalculatorSteps.GivenIPressAdd() (21,7s)
Thread#0:B:And I enter 70 into the calculator
Thread#0:T:done: CalculatorSteps.GivenIHaveEnteredIntoTheCalculator(70) (0,0s)
Thread#0:B:And I press add
Thread#0:T:done: CalculatorSteps.GivenIPressAdd() (14,4s)
Thread#0:B:And then I enter 80 into the calculator
Thread#0:T:done: CalculatorSteps.GivenThenIEnterIntoTheCalculator(80) (0,0s)
Thread#0:B:When I press Equals
Thread#0:T:done: CalculatorSteps.WhenIPressEquals() (0,0s)
Thread#0:B:Then the result should be 200
Thread#0:T:error: Assert.AreEqual failed. Expected:<200>. Actual:<270>. 
Thread#0:TestItem#5:Scheduler: reschedule tests for testitem #5
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: dequeuing a rescheduled testitem: #5
Thread#0:Scheduler: considering testitem #5 for thread 0
Thread#0:TestItem#5:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#5:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#5:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #5 for thread 0
Thread#0:Scheduler: Test #5 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 1
Thread#0: Test #5/0 is finished on thread #0 as Failed within 69,9755628 seconds
Thread#0: Test #5/1 is started on thread #0
Thread#0:B:Given I enter 50 into the calculator
Thread#0:T:done: CalculatorSteps.GivenIHaveEnteredIntoTheCalculator(50) (0,0s)
Thread#0:B:And I press add
Thread#0:T:done: CalculatorSteps.GivenIPressAdd() (1,3s)
Thread#0:B:And I enter 70 into the calculator
Thread#0:T:done: CalculatorSteps.GivenIHaveEnteredIntoTheCalculator(70) (0,0s)
Thread#0:B:And I press add
Thread#0:T:done: CalculatorSteps.GivenIPressAdd() (2,1s)
Thread#0:B:And then I enter 80 into the calculator
Thread#0:T:done: CalculatorSteps.GivenThenIEnterIntoTheCalculator(80) (0,0s)
Thread#0:B:When I press Equals
Thread#0:T:done: CalculatorSteps.WhenIPressEquals() (22,4s)
Thread#0:B:Then the result should be 200
Thread#0:T:error: Assert.AreEq